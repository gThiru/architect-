Release process 
    Release Versioning format 
    How frequent release should be 
    How long a release can be supported 

Development model 
    Agile or kanban
    Pairing a engineers for each ticket for fast development
    Task must me small as much as possible 
    It shout not be a more than 3 days of work
    If it cross it then senior enginer has to pair to speed up or to clear a road block
    

DevOps:
    DevOps is not a ONE solution for all but there is a solution for all
    Because there are multiple choices are there in each segment/stage of CI/CD process
    As DevOps is an extension of Agile methodology, DevOps itself calls for extension beyond its basic form as well
    DevOps is the one of the best culture evolved so far because it gives a Unity between different segment of engineers like Dev, QA, Ops, Stakeholders some times client
    and gives a better communication like a omni directional(accross different team) instead of uni directional communication(with in the team comminication) 
    A pure celebration will happen at the end/part of product release and it creates strong Unity between engineers
    More visibility to engineers
    Speeds up the development, testing and production
    Everyone will be happy like
        Developer happy because he delivered his code and he sees the result in live/production environment
        Customer happy as they are keep getting new functionality and delivering to the market and promoting their feature
    Makes engineer to focus on a thinner/small/specific functionality instead of concentrating multiple tasks and diverting their time and concentration
    
    
Ticket life cycle 
    Minimum and maximum time for a ticket development or testing 
    Ticket stages 
    Who dose the validation? Same Developer or another developer or test team 
    Unit test included part of development?
    Test cases can be automated?
    Language used for automation 

How to gether a requirement 
    Arrange a meeting with a client 
    Discuss with a development team 
    Discuss with test team
    Have a detailed discussion before deciding the estimation
    Estimation:
        If very new requirement then to understand complete technology minimum 5 days without any distrubance from other works

DevOps tools and process 
    Vcs: Github or gitlab or svn 
    CI tool: Jenkins or bamboo 
    Cms tool: ansible or chef or puppet 
    Cloud: AWS or Azure
    Code coverage: sonarQube 
    Automation test: python or selenium 

Wiki page: confluence or gitlab wiki 
Ticketing tool: Jira 

How to reduce a reposize?

Flow diagram application and getting experience

Different methods of delivery process and tools

CICD pipeline design diagram

AWS Cloud formation script and design

AWS CICD delivery/deploymnet design diagram

DevOps security Ops?

Each ticket two person can join together and work faster 

Leave:
    Leave update plan for team and where are we notifying?
    
Wiki/Documentation:
    Which tool are we using documentation?
        Confluence? or github?
        
Artifact/build binary storage:
    Artifactory or Nexus or Progen
    Artifactory - has a dedicated/supported programinng language library
                Has own database for querying 
                Query is made easy?
                Not customisable only we have to select existing language for uploading build binaries or lib/supported files
                Better UI
                Developer is Jforg
    Nexus:
        User can custamise the repository
        has minimal dedicated language support
        Developer is Sonatype
    Progen:
        Supported for modern technologies like Data sceience and machine learning

Template:
    Document or ppt company template?

Cleanup:
    VCS(gitlab/github) branches and jenkins jobs
